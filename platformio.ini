; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
name = TeleDrive
default_envs = lolin_s2_mini, esp32_s3_tiny

[monitor_settings]
speed = 115200
filters = esp32_exception_decoder, log2file

[env]
framework = arduino
platform = https://github.com/pioarduino/platform-espressif32/releases/download/stable/platform-espressif32.zip
monitor_speed=${monitor_settings.speed}
monitor_filters=${monitor_settings.filters}
build_flags = 
  -D MONITOR_SPEED=${monitor_settings.speed}
  ; Configure app
  ; -------------------------------
  ; either logging to serial port
  -D MYCILA_LOGGER_SUPPORT_APP
  -D CONFIG_ARDUHAL_LOG_COLORS
  ; -------------------------------
  ; or logging to webserial
  ; -D MYCILA_WEBSERIAL_SUPPORT_APP
  ; -------------------------------
  -D APP_VERSION=\"v1.0.0\"
  -D APP_NAME=\"TDrive\"
  -D ESPCONNECT_TIMEOUT_CAPTIVE_PORTAL=180
  -D ESPCONNECT_TIMEOUT_CONNECT=20
  -D ESPCONNECT_NO_LOGGING
  -D CAPTIVE_PORTAL_SSID=\"TDrive\"
  -D CAPTIVE_PORTAL_PASSWORD=\"\"
  -D HTTP_PORT=80
  ; AsyncTCP
  -D CONFIG_ASYNC_TCP_RUNNING_CORE=1
  -D CONFIG_ASYNC_TCP_STACK_SIZE=6144
  -D WS_MAX_QUEUED_MESSAGES=128
  -D CONFIG_ASYNC_TCP_QUEUE_SIZE=64
  ; TaskScheduler
  -D _TASK_THREAD_SAFE
  -D _TASK_STD_FUNCTION
  -D _TASK_STATUS_REQUEST
  -D _TASK_SELF_DESTRUCT
  ; TMC2209 Pins
  -D TMC_STEP=2
  -D TMC_DIR=1
  -D TMC_RX=3
  -D TMC_TX=4
  -D TMC_EN=5
  -D TMC_DIAG=6
  -D TMC_HOME=7
  ; Motor config
  -D USTEPS_PER_STEP=16
  -D STEPS_PER_MM=400
  -D MOVEMENT_UPDATE_MS=100
  ; Homing speed in ÂµSteps/period
  ; set to 250 rmp ~= 33,3mm/s
  -D HOMING_SPEED=18641
  ; C++
  -std=c++17
  -std=gnu++17
  ; https://gcc.gnu.org/onlinedocs/gcc/Optimize-Options.html
  -O1
build_unflags =
  -std=gnu++11
lib_deps = 
  bblanchon/ArduinoJson @ 7.4.1
  ESP32Async/AsyncTCP @ 3.3.8
  ESP32Async/ESPAsyncWebServer @ 3.7.6
  mathieucarbou/MycilaESPConnect @ 10.0.1
  mathieucarbou/MycilaSystem @ 4.1.0
  arkhipenko/TaskScheduler @ 3.8.5
  mathieucarbou/MycilaLogger @ 3.3.0
  fastled/FastLED @ ^3.9.14
  janelia-arduino/TMC2209 @ 10.1.0
  gin66/FastAccelStepper @ 0.31.6
lib_compat_mode = strict
lib_ldf_mode = chain
upload_protocol = esptool
board = lolin_s2_mini
board_build.filesystem = littlefs
board_build.partitions = partitions-4MB-safeboot.csv
board_build.app_partition_name = app
custom_safeboot_restart_path = /api/system/safeboot
extra_scripts =
  pre:tools/version.py
  pre:tools/compress_embed_html.py
  pre:tools/compress_data_css.py
  pre:tools/compress_data.py
board_build.embed_files =
  .pio/embed/website.html.gz
  .pio/embed/webserial.html.gz

;  CI
[env:ci]
platform = ${sysenv.PIO_PLATFORM}
board = ${sysenv.PIO_BOARD}

; environment without OTA
[env:lolin_s2_mini]
board = lolin_s2_mini
extra_scripts = ${env.extra_scripts}
  post:safeboot/tools/factory.py
custom_safeboot_dir = safeboot

; After initial flashing of the [..].factory.bin, espota can be used for uploading the app
[env:lolin_s2_mini-ota]
board = lolin_s2_mini
upload_protocol = espota
upload_port = tdrive.local
extra_scripts = ${env.extra_scripts}
  safeboot/tools/safeboot.py

; environment without OTA and external RGB-LED
[env:lolin_s2_mini_extled]
board = lolin_s2_mini
build_flags = ${env.build_flags}
  ; FastLED Color correction values for the external RGB-LED
  -D COLOR_CORR_SCALE=200
  -D COLOR_CORR_R=255
  -D COLOR_CORR_G=90
  -D COLOR_CORR_B=215
  -D RGB_EXTERNAL=18
extra_scripts = ${env.extra_scripts}
  post:safeboot/tools/factory.py
custom_safeboot_dir = safeboot

; After initial flashing of the [..].factory.bin, espota can be used for uploading the app
[env:lolin_s2_mini_extled-ota]
board = lolin_s2_mini
build_flags = ${env.build_flags}
  ; FastLED Color correction values for the external RGB-LED
  -D COLOR_CORR_SCALE=200
  -D COLOR_CORR_R=255
  -D COLOR_CORR_G=90
  -D COLOR_CORR_B=215
  -D RGB_EXTERNAL=18
upload_protocol = espota
upload_port = tdrive.local
extra_scripts = ${env.extra_scripts}
  safeboot/tools/safeboot.py

[env:esp32_s3_tiny]
board = waveshare_esp32_s3_tiny
build_flags = ${env.build_flags}
  ; FastLED Color correction values for the on-board RGB-LED
  -D COLOR_CORR_SCALE=200
  -D COLOR_CORR_R=255
  -D COLOR_CORR_G=85
  -D COLOR_CORR_B=210
  ; Define color order here to overcome the redefine warning
  -D RGB_BUILTIN_LED_COLOR_ORDER=LED_COLOR_ORDER_RGB
extra_scripts = ${env.extra_scripts}
  post:safeboot/tools/factory.py
custom_safeboot_dir = safeboot

; After initial flashing of the [..].factory.bin, espota can be used for uploading the app
[env:esp32_s3_tiny-ota]
board = waveshare_esp32_s3_tiny
build_flags = ${env.build_flags}
  ; FastLED Color correction values for the on-board RGB-LED
  -D COLOR_CORR_SCALE=200
  -D COLOR_CORR_R=255
  -D COLOR_CORR_G=85
  -D COLOR_CORR_B=210
  ; Define color order here to overcome the redefine warning
  -D RGB_BUILTIN_LED_COLOR_ORDER=LED_COLOR_ORDER_RGB
upload_protocol = espota
upload_port = tdrive.local
extra_scripts = ${env.extra_scripts}
  safeboot/tools/safeboot.py
